@model Assg.Models.TutorModels.CourseDetailsViewModel
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<!-- navigation -->
<div class="container mt-4">
    <div class="d-flex overflow-auto">
        <ul class="nav nav-tabs mb-3">
            <li class="nav-item">
                <a class="nav-link active" href="#manage-course" data-bs-toggle="tab">Manage Course</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#qa" data-bs-toggle="tab">Q&A</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#edit" data-bs-toggle="tab">Edit</a>
            </li>
        </ul>
    </div>

    <!-- Manage Course (after click course) -->
    <div class="tab-content">
        <div class="tab-pane fade show active" id="manage-course">
            <button class="btn btn-dark text-white mb-3 d-none" id="openSidebarBtn" aria-label="Open Sidebar">
                <i class="fa fa-bars"></i>
            </button>
            <div class="d-flex">
                <div class="card flex-fill ms-3 shadow-sm" id="mainContent">
                    <div class="card-body">
                        <h6>
                            <strong>@Model.Course.Id</strong> @Model.Course.Name
                            <button class="btn btn-sm btn-primary ms-3" id="openChapterModalBtn" data-bs-toggle="modal" data-bs-target="#addChapterModal" aria-label="Add Chapter">
                                <i class="fa fa-plus"></i>
                            </button>
                        </h6>
                        <hr />

                        <div>
                            @foreach (var chapter in Model.Chapter)
                            {
                                <div class="card mb-3">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <span>@chapter.Title</span>
                                        <div>
                                            <button class="btn btn-sm btn-primary me-2" id="openContentModalBtn_@chapter.Id" data-bs-toggle="modal" data-bs-target="#addContentModal_@chapter.Id" aria-label="Add Content">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                            <button class="btn btn-sm btn-danger" onclick="confirmDeleteChapter(@chapter.Id)" aria-label="Delete Chapter">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <ul class="list-group">
                                            @foreach (var content in Model.chapterContents)
                                            {
                                                if (content.ChapterId == chapter.Id)
                                                {
                                                    <li class="list-group-item">
                                                        <strong>@content.Title</strong>
                                                        <p>@content.Description</p>
                                                        @if (content.Type == "Material" && content.FileData != null)
                                                        {
                                                            <a href="@Url.Action("Download", "Course", new { id = content.Id })" class="btn btn-sm btn-primary">
                                                                Download @content.FileName
                                                            </a>
                                                        }
                                                        @if (content.Type == "Quiz" && content.QuizQuestions != null)
                                                        {
                                                            <a href="@Url.Action("Answer", "Quiz", new { chapterContentId = content.Id })" class="btn btn-sm btn-primary">
                                                                Answer Quiz
                                                            </a>
                                                        }
                                                        <button class="btn btn-sm btn-danger mt-2" onclick="confirmDeleteContent(@content.Id)">
                                                            <i class="fa fa-trash"></i>
                                                        </button>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- QnA -->
        <div class="tab-pane fade" id="qa">
            <div class="container">

                @* <div class="modal fade" id="postQuestionModal" tabindex="-1" aria-labelledby="postQuestionModalLabel" aria-hidden="true"> *@
                @*     <div class="modal-dialog"> *@
                @*         <div class="modal-content"> *@
                @*             <div class="modal-header"> *@
                @*                 <h5 class="modal-title" id="postQuestionModalLabel">Post a New Question</h5> *@
                @*                 <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> *@
                @*             </div> *@
                @*             <div class="modal-body"> *@
                @*                 <form id="postQuestionForm" method="post" action="@Url.Action("PostQuestion", "Course", new { courseId = @Model.Course.Id })"> *@
                @*                     <input type="hidden" name="chapterContentId" value="@ViewData["ChapterContentId"]" /> *@
                @*                     <div class="mb-3"> *@
                @*                         <label for="questionTitle" class="form-label">Title</label> *@
                @*                         <input type="text" class="form-control" id="Title" name="Title" required> *@
                @*                     </div> *@
                @*                     <div class="mb-3"> *@
                @*                         <label for="questionContent" class="form-label">Content</label> *@
                @*                         <textarea class="form-control" id="Content" name="Content" rows="4" required></textarea> *@
                @*                     </div> *@
                @*                     <div class="d-flex justify-content-end"> *@
                @*                         <button type="submit" class="btn btn-primary">Post Question</button> *@
                @*                     </div> *@
                @*                 </form> *@
                @*             </div> *@
                @*         </div> *@
                @*     </div> *@
                @* </div> *@

                <div class="list-group">
                    @foreach (var question in Model.chatQuestions)
                    {
                        <div class="list-group-item">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h5 class="mb-1">@question.QuestionTitle</h5>
                                    <p class="mb-1">@question.QuestionContent</p>
                                </div>

                                <form method="post" action="@Url.Action("DeleteQuestion", "Course", new { courseId = @Model.Course.Id })" onsubmit="return confirm('Are you sure you want to delete this question?');">
                                    <input type="hidden" name="QuestionId" value="@question.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                </form>
                            </div>
                            <!-- Display answers for the current question -->
                            <div id="question@question.Id" class="mt-2">
                                <div class="card card-body">
                                    <h6>Answers:</h6>
                                    <ul class="list-unstyled">
                                        @foreach (var answer in Model.chatAnswers.Where(a => a.QuestionId == question.Id))
                                        {
                                            <li class="mb-2 d-flex justify-content-between align-items-start">
                                                <div>
                                                    <p>@answer.Content</p>
                                                </div>

                                                <form method="post" action="@Url.Action("DeleteAnswer", "Course", new { courseId = @Model.Course.Id })" onsubmit="return confirm('Are you sure you want to delete this answer?');">
                                                    <input type="hidden" name="AnswerId" value="@answer.Id" />
                                                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                                </form>
                                            </li>
                                        }
                                    </ul>
                                    <form method="post" action="@Url.Action("PostAnswer", "Course", new { courseId = @Model.Course.Id })">
                                        <input type="hidden" name="QuestionId" value="@question.Id" />
                                        <div class="mb-3">
                                            <textarea class="form-control" name="Content" placeholder="Your answer..." required></textarea>
                                        </div>
                                        <div class="d-flex justify-content-end">
                                            <button type="submit" class="btn btn-primary btn-sm">Post Answer</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                </div>

            </div>
        </div>

        

        <!-- Edit Course -->
        <div class="tab-pane fade" id="edit">
            <form id="editCourseForm" method="post" action="@Url.Action("EditCourse", "Course", new { courseId = @Model.Course.Id })">
                <div class="mb-3">
                    <label for="courseName" class="form-label">Course Name:</label>
                    <input type="text" id="courseName" name="courseName" class="form-control" value="@Model.Course.Name" required>
                </div>

                <div class="mb-3">
                    <label for="categoryId" class="form-label">Category Name:</label>
                    <select id="categoryId" name="categoryId" class="form-control" required>
                        @if (ViewBag.Categories != null)
                        {
                            foreach (var category in ViewBag.Categories)
                            {
                                if (category.categoryId == Model.Course.categoryId)
                                {
                                    <option value="@category.categoryId" selected>@category.categoryName</option>
                                }
                                else
                                {
                                    <option value="@category.categoryId">@category.categoryName</option>
                                }
                            }
                        }
                        else
                        {
                            <option value="" disabled>No categories available</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
    <label for="subcategoryName" class="form-label">Subcategory Name:</label>
    <select id="subcategoryName" name="subcategoryId" class="form-control" required>
        @if (ViewBag.Subcategories != null)
        {
            foreach (var subcategory in ViewBag.Subcategories)
            {
                if (subcategory.subcategoryName == Model.Course.subcategoryId)
                {
                    <option value="@subcategory.subcategoryName" selected>@subcategory.subcategoryName</option>
                }
                else
                {
                    <option value="@subcategory.subcategoryName">@subcategory.subcategoryName</option>
                }
            }
        }
        else
        {
            <option value="" disabled>No subcategories available</option>
        }
    </select>
</div>


                                <div class="mb-3">
                    <label for="courseSubtitle" class="form-label">Subtitle:</label>
                    <input type="text" id="courseSubtitle" name="subtitle" class="form-control" required value="@Model.Course.subtitle" />
                </div>
                <div class="mb-3">
                    <label for="price" class="form-label">Price (MYR):</label>
                    <input for="price" id="price" name="price" class="form-control" required value="@Model.Course.Price" step="0.01" />
                    <span asp-validation-for="@Model.Course.Price" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label for="courseDescription" class="form-label">Description:</label>
                    <textarea id="courseDescription" name="description" class="form-control" required>@Model.Course.description</textarea>
                </div>
                <button type="submit" class="btn btn-primary">Save Changes</button>
            </form>
            <div class="mt-3">
                <button type="button" class="btn btn-danger" onclick="confirmDelete('@Model.Course.Id')">Delete Course</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="addChapterModal" tabindex="-1" aria-labelledby="addChapterModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addChapterModalLabel">Add New Chapter</h5>
                <button type="button" class="btn-close" id="closeChapterModalBtn" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addChapterForm" method="post" action="@Url.Action("AddChapter", "Course", new { courseId = @Model.Course.Id })">
                    <div class="mb-3">
                        <label for="chapterTitle" class="form-label">Chapter Title</label>
                        <input type="text" class="form-control" id="chapterTitle" name="chapterTitle" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Add Chapter</button>
                </form>
            </div>
        </div>
    </div>
</div>

@foreach (var chapter in Model.Chapter)
{
    <div class="modal fade" id="addContentModal_@chapter.Id" tabindex="-1" aria-labelledby="addContentModalLabel_@chapter.Id" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addContentModalLabel_@chapter.Id">Add Content to @chapter.Title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form method="post" action="@Url.Action("AddContent", "Course", new { courseId = @Model.Course.Id, chapterId = chapter.Id })" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label for="contentType" class="form-label">Content Type</label>
                            <select id="contentType_@chapter.Id" name="Type" class="form-select" required onchange="toggleContentType(@chapter.Id)">
                                <option value="">Select Type</option>
                                <option value="Material">Material</option>
                                <option value="Quiz">Quiz</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="contentTitle" class="form-label">Title</label>
                            <input type="text" class="form-control" id="contentTitle" name="Title" required>
                        </div>

                        <div class="mb-3">
                            <label for="materialDescription_@chapter.Id" class="form-label">Description</label>
                            <textarea class="form-control" id="materialDescription_@chapter.Id" name="Description" rows="3" placeholder="Enter a description for the material" required></textarea>
                        </div>

                        <div id="materialInputs_@chapter.Id" style="display: none;">

                            <div class="mb-3" id="fileInputContainer">
                                <label class="form-label">Upload Material</label>
                                <div class="input-group mb-2">
                                    <input type="file" class="form-control" name="Files" accept=".mp4,.avi,.mov,.wmv">
                                    <button type="button" class="btn btn-outline-secondary" onclick="removeFileInput(this)">Remove</button>
                                </div>
                            </div>
                            <button type="button" class="btn btn-secondary me-2 addFileInput" data-chapter-id="@chapter.Id">Add Another File</button>
                        </div>

                        <div id="quizInputs_@chapter.Id" style="display: none;">
                            <div id="quizQuestions_@chapter.Id" class="mb-3">
                                <label>Questions:</label>
                            </div>
                            <button type="button" class="btn btn-secondary me-2" onclick="addQuizQuestion(@chapter.Id)">Add Question</button>
                        </div>

                        <div class="d-flex justify-content-end mt-3">
                            <button type="submit" class="btn btn-primary">Add Content</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>

    function confirmDelete(courseId) {
        if (confirm("Are you sure you want to delete this course? This action cannot be undo.")) {
            window.location.href = `/Course/DeleteCourse?courseId=${courseId}`;
        }
    }

    function toggleContentType(chapterId) {
        const typeSelector = document.getElementById(`contentType_${chapterId}`);
        const materialInputs = document.getElementById(`materialInputs_${chapterId}`);
        const quizInputs = document.getElementById(`quizInputs_${chapterId}`);

        if (typeSelector.value === "Material") {
            materialInputs.style.display = "block";
            quizInputs.style.display = "none";
        } else if (typeSelector.value === "Quiz") {
            materialInputs.style.display = "none";
            quizInputs.style.display = "block";
        } else {
            materialInputs.style.display = "none";
            quizInputs.style.display = "none";
        }
    }

    function addQuizQuestion(chapterId) {
        const questionsContainer = document.getElementById(`quizQuestions_${chapterId}`);
        const questionId = `question_${Date.now()}`;

        const questionHTML = `
            <div class="card mb-3" id="${questionId}">
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label">Question Text</label>
                        <textarea class="form-control" name="questions[${questionId}][questionText]" required></textarea>
                    </div>
                    <div class="mb-3" id="${questionId}_options">
                        <label class="form-label">Options</label>
                        <div id="${questionId}_optionsContainer"></div>
                        <button type="button" class="btn btn-outline-secondary mb-2" onclick="addOption('${questionId}')">Add Option</button>
                    </div>

                    <button type="button" class="btn btn-danger" onclick="removeQuizQuestion('${questionId}')">Remove Question</button>
                </div>
            </div>
        `;

        questionsContainer.insertAdjacentHTML("beforeend", questionHTML);
    }

    function addOption(questionId) {
        const optionsContainer = document.getElementById(`${questionId}_optionsContainer`);
        const optionId = `option_${Date.now()}`;

        const optionHTML = `
            <div class="input-group mb-2" id="${optionId}">
                <input type="text" class="form-control" name="questions[${questionId}][Options][]" placeholder="Option" required>
                <div class="input-group-text">
                    <input type="radio" name="questions[${questionId}][CorrectAnswers]" value="" title="Mark as Correct" onclick="setCorrectAnswer('${optionId}')" required>
                </div>
                <button type="button" class="btn btn-outline-danger" onclick="removeOption('${optionId}')">Remove</button>
            </div>
        `;

        optionsContainer.insertAdjacentHTML("beforeend", optionHTML);
    }

    function setCorrectAnswer(optionId) {
        const optionInput = document.getElementById(optionId).querySelector('input[type="text"]');
        const radioInput = document.getElementById(optionId).querySelector('input[type="radio"]');
        radioInput.value = optionInput.value;
    }

    function removeOption(button) {
        button.parentElement.remove();
    }

    function removeQuizQuestion(questionId) {
        document.getElementById(questionId).remove();
    }

    document.addEventListener("click", function (e) {
        if (e.target && e.target.classList.contains("addFileInput")) {
            const chapterId = e.target.getAttribute("data-chapter-id");
            const fileInputContainer = document.querySelector(`#materialInputs_${chapterId} #fileInputContainer`);

            const newFileInputHTML = `
                <div class="input-group mb-2">
                    <input type="file" class="form-control" name="Files" accept=".mp4,.avi,.mov,.wmv">
                    <button type="button" class="btn btn-outline-secondary" onclick="removeFileInput(this)">Remove</button>
                </div>
            `;

            fileInputContainer.insertAdjacentHTML("beforeend", newFileInputHTML);
        }
    });

    function removeFileInput(button) {
        button.parentElement.remove();
    }


    function confirmDeleteChapter(chapterId) {
        if (confirm("Are you sure you want to delete this content? This action cannot be undo.")) {
            window.location.href = `/Course/DeleteChapter?id=${chapterId}`;
        }
    }

    function confirmDeleteContent(contentId) {
        if (confirm("Are you sure you want to delete this content? This action cannot be undo.")) {
            window.location.href = `/Course/DeleteContent?id=${contentId}`;
        }
    }

</script>
<script>
$(document).ready(function() {
    $('#categoryId').change(function() {
        var categoryId = $(this).val();
        var subcategorySelect = $('#subcategoryName');
        
        // Clear existing options
        subcategorySelect.empty();
        subcategorySelect.append('<option value="" disabled selected>Select a subcategory</option>');
        
        if (categoryId) {
            $.getJSON('@Url.Action("GetSubcategories", "MyCourse")', { categoryId: categoryId }, function(data) {
                $.each(data, function(index, item) {
                    subcategorySelect.append($('<option></option>')
                        .val(item.subcategoryName)
                        .text(item.subcategoryName));
                });
                subcategorySelect.prop('disabled', false);
            });
        } else {
            subcategorySelect.prop('disabled', true);
        }
    });
});
</script>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.0/signalr.min.js"></script>
<script src="~/js/notifications.js" asp-append-version="true"></script>

